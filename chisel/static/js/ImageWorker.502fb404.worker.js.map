{"version":3,"sources":["../webpack/bootstrap","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","imageProcessing.ts","ImageWorker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_arrayLikeToArray","arr","len","length","arr2","Array","_slicedToArray","isArray","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","minLen","toString","slice","constructor","from","test","TypeError","mapToRgba","map","rgba","Uint8Array","byte","Math","max","min","intensityMap","width","height","intens","intensityMapToArray","g","b","round","horizontalGradientMapToArray","grad","y","horizontalGradientRowToArray","left","right","a","e","f","curr","prev","x","xl","xr","abs","allocateArrays","lengths32","lengths16","lengths8","sum","values","reduce","size","buffer","ArrayBuffer","offset","array","Uint32Array","Uint16Array","findAndRemoveVerticalSeams","seams","count","table","seam","subarray","findVerticalSeam","removeVerticalSeam","j","other","k","grads","predecessor","last","tail","source","dest","copyWithin","transpose","scratch","transposeToArray","set","transposed","rgbaAverage","bytes","u32","averageBytes","ctx","self","sendImage","postMessage","addEventListener","event","message","data","image","startedAt","performance","now","memo","transformation","command","carvedWidth","carvedHeight","byteOffset","verticalSeams","horizontalSeams","maxImageSize","maxIntensgradsSize","scratch32","scratch16","result","resultRgba","carve","remove","out","row","xs","sort","copySegment","begin","end","forEach","carveImage","axis","vertical","imageSize","highlight","highlightSeams","verticalGradientMap","horizontalGradientMap","console","log"],"mappings":"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","file":"static/js/ImageWorker.502fb404.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","type TypedArray = Uint8Array | Uint16Array | Uint32Array;\n\nexport function mapToRgba(map: Uint8Array | Uint16Array, length: number): Uint8Array {\n  const rgba = new Uint8Array(4 * length);\n\n  for (let i = 0; i < length; i++) {\n    const byte = Math.max(0, Math.min(0xff, map[i]));\n    rgba[4 * i] = rgba[4 * i + 1] = rgba[4 * i + 2] = byte;\n    rgba[4 * i + 3] = 0xff;\n  }\n\n  return rgba;\n}\n\nexport function intensityMap(rgba: Uint8Array, width: number, height: number): Uint8Array {\n  const intens = new Uint8Array(width * height);\n  intensityMapToArray(intens, rgba, width, height);\n  return intens;\n}\n\nfunction intensityMapToArray(intens: Uint8Array, rgba: Uint8Array, width: number, height: number) {\n  for (let i = 0; i < width * height; i++) {\n    const r = rgba[4 * i];\n    const g = rgba[4 * i + 1];\n    const b = rgba[4 * i + 2];\n    intens[i] = Math.round(0.3 * r + 0.59 * g + 0.11 * b);\n  }\n}\n\nexport function horizontalGradientMap(intens: Uint8Array, width: number, height: number): Uint16Array {\n  const grad = new Uint16Array(width * height);\n  horizontalGradientMapToArray(grad, intens, width, height);\n  return grad;\n}\n\nfunction horizontalGradientMapToArray(grad: Uint16Array, intens: Uint8Array, width: number, height: number) {\n  for (let y = 0; y < height; y++) {\n    horizontalGradientRowToArray(grad, intens, width, height, y, 0, width - 1);\n  }\n}\n\nfunction horizontalGradientRowToArray(grad: Uint16Array, intens: Uint8Array, width: number, height: number, y: number, left: number, right: number) {\n  const curr = y * width;\n  const prev = (y == 0) ? curr : (curr - width);\n  const next = (y == height - 1) ? curr : (curr + width);\n\n  for (let x = left; x <= right; x++) {\n    const xl = Math.max(0, x - 1);\n    const xr = Math.min(width - 1, x + 1);\n\n    grad[curr + x] = horizontalGradient(\n      intens[prev + xl], intens[prev + xr],\n      intens[curr + xl], intens[curr + xr],\n      intens[next + xl], intens[next + xr],\n    );\n  }\n}\n\nfunction horizontalGradient(a: number, b: number, c: number, d: number, e: number, f: number) {\n  return Math.abs(-a + b - 2 * c + 2 * d - f + e);\n}\n\nexport function verticalGradientMap(intens: Uint8Array, width: number, height: number): Uint16Array {\n  const grad = new Uint16Array(width * height);\n\n  for (let y = 0; y < height; y++) {\n    const curr = width * y;\n    const prev = (y === 0) ? 0 : (curr - width);\n    const next = (y === height - 1) ? curr : (curr + width);\n\n    for (let x = 0; x < width; x++) {\n      const xl = Math.max(0, x - 1);\n      const xr = Math.min(width - 1, x + 1);\n\n      grad[curr + x] = verticalGradient(\n        intens[prev + xl], intens[prev + x], intens[prev + xr],\n        intens[next + xl], intens[next + x], intens[next + xr],\n      );\n    }\n  }\n\n  return grad;\n}\n\nfunction verticalGradient(a: number, b: number, c: number, d: number, e: number, f: number) {\n  return Math.abs(-a - 2 * b - c + d + 2 * e + f);\n}\n\nexport function carveImage(\n  rgba: Uint8Array,\n  width: number,\n  height: number,\n  carvedWidth: number,\n  carvedHeight: number,\n): Uint8Array {\n  if (width === carvedWidth && height === carvedHeight) {\n    return rgba;\n  }\n\n  const image = new Uint32Array(rgba.buffer, rgba.byteOffset, width * height);\n\n  const verticalSeams = Math.abs(width - carvedWidth);\n  const horizontalSeams = Math.abs(height - carvedHeight);\n\n  const maxImageSize = Math.max(width, carvedWidth) * Math.max(height, carvedHeight);\n  const maxIntensgradsSize = Math.max(width, carvedWidth) * height;\n  const maxSeamsSize = Math.max(verticalSeams * height, horizontalSeams * carvedWidth);\n\n  const [\n    [scratch32],\n    [seams, grad],\n    [intens]\n  ] = allocateArrays(\n    [maxImageSize],\n    [maxSeamsSize, maxIntensgradsSize],\n    [maxIntensgradsSize],\n  );\n\n  const scratch16 = new Uint16Array(scratch32.buffer, scratch32.byteOffset, 2 * scratch32.length);\n\n  const result = new Uint32Array(carvedWidth * Math.max(height, carvedHeight));\n  const resultRgba = new Uint8Array(result.buffer);\n\n  const carve = (image: Uint32Array, width: number, height: number, count: number, remove: boolean) => {\n    findAndRemoveVerticalSeams(\n      seams,\n      count,\n      intens,\n      grad,\n      width,\n      height,\n      scratch32,\n    );\n\n    transpose(seams, height, count, scratch16);\n\n    const out = (image === result)\n      ? scratch32\n      : result;\n\n    let offset = 0;\n\n    for (let y = 0; y < height; y++) {\n      const row = y * width;\n\n      const xs = seams.subarray(count * y, count * (y + 1));\n      xs.sort();\n\n      let prev = 0;\n\n      const copySegment = (begin: number, end: number) => {\n        out.set(image.subarray(row + begin, row + end), offset);\n        offset += end - begin;\n      };\n\n      xs.forEach(x => {\n        copySegment(prev, x);\n\n        if (!remove) {\n          const xl = Math.max(0, x - 1);\n          const xr = Math.min(width - 1, x + 1);\n          out[offset++] = rgbaAverage(image[row + xl], image[row + x]);\n          out[offset++] = rgbaAverage(image[row + x], image[row + xr]);\n        }\n\n        prev = x + 1;\n      });\n\n      copySegment(prev, width);\n    }\n\n    if (out !== result) {\n      result.set(out.subarray(0, offset));\n    }\n  };\n\n  if (width !== carvedWidth) {\n    intensityMapToArray(intens, rgba, width, height);\n    horizontalGradientMapToArray(grad, intens, width, height);\n    carve(image, width, height, verticalSeams, carvedWidth < width);\n  }\n\n  if (height !== carvedHeight) {\n    if (width === carvedWidth) {\n      transposeToArray(result, image, width, height);\n    } else {\n      transpose(result, carvedWidth, height, scratch32);\n    }\n\n    intensityMapToArray(intens, resultRgba, height, carvedWidth);\n    horizontalGradientMapToArray(grad, intens, height, carvedWidth);\n    carve(result, height, carvedWidth, horizontalSeams, carvedHeight < height);\n    transpose(result, carvedHeight, carvedWidth, scratch32);\n  }\n\n  return resultRgba.subarray(0, 4 * carvedWidth * carvedHeight);\n}\n\nexport function highlightSeams(\n  rgba: Uint8Array,\n  width: number,\n  height: number,\n  vertical: boolean,\n  count: number,\n): Uint8Array {\n  if (count === 0) {\n    return rgba;\n  }\n\n  const image = new Uint32Array(rgba.buffer, rgba.byteOffset, width * height);\n\n  const imageSize = width * height;\n  const seamLength = vertical ? height : width;\n\n  const [\n    [scratch32],\n    [seams, grad],\n    [intens],\n  ] = allocateArrays(\n    [imageSize],\n    [seamLength * count, imageSize],\n    [imageSize],\n  );\n\n  const result = new Uint32Array(width * height);\n  const resultRgba = new Uint8Array(result.buffer);\n\n  const highlight = (width: number, height: number) => {\n    findAndRemoveVerticalSeams(\n      seams,\n      count,\n      intens,\n      grad,\n      width,\n      height,\n      scratch32,\n    );\n\n    for (let i = 0; i < count; i++) {\n      const seam = seams.subarray(i * height, (i + 1) * height);\n\n      for (let y = 0; y < height; y++) {\n        const x = seam[y];\n        resultRgba.set([0xff, 0x00, 0xff, 0xff], 4 * (y * width + x));\n      }\n    }\n  };\n\n  if (vertical) {\n    result.set(image.subarray(0, width * height));\n    intensityMapToArray(intens, rgba, width, height);\n    horizontalGradientMapToArray(grad, intens, width, height);\n    highlight(width, height);\n  } else {\n    transposeToArray(result, image, width, height);\n    intensityMapToArray(intens, resultRgba, height, width);\n    horizontalGradientMapToArray(grad, intens, height, width);\n    highlight(height, width);\n    transpose(result, height, width, scratch32);\n  }\n\n  return resultRgba;\n}\n\nfunction allocateArrays(\n  lengths32: Array<number>,\n  lengths16: Array<number>,\n  lengths8: Array<number>\n): [Array<Uint32Array>, Array<Uint16Array>, Array<Uint8Array>] {\n  const sum = (values: Array<number>) => values.reduce((x, y) => x + y);\n  const size = 4 * sum(lengths32) + 2 * sum(lengths16) + sum(lengths8);\n\n  const buffer = new ArrayBuffer(size);\n\n  let offset = 0;\n\n  const arrays32 = lengths32.map(length => {\n    const array = new Uint32Array(buffer, offset, length);\n    offset += 4 * length;\n    return array;\n  });\n\n  const arrays16 = lengths16.map(length => {\n    const array = new Uint16Array(buffer, offset, length);\n    offset += 2 * length;\n    return array;\n  });\n\n  const arrays8 = lengths8.map(length => {\n    const array = new Uint8Array(buffer, offset, length);\n    offset += length;\n    return array;\n  });\n\n  return [\n    arrays32,\n    arrays16,\n    arrays8,\n  ];\n}\n\nfunction findAndRemoveVerticalSeams(\n  seams: Uint16Array,\n  count: number,\n  intens: Uint8Array,\n  grad: Uint16Array,\n  width: number,\n  height: number,\n  table: Uint32Array,\n) {\n  for (let i = 0; i < count; i++) {\n    const seam = seams.subarray(i * height, (i + 1) * height);\n\n    findVerticalSeam(seam, table, grad, width, height);\n    removeVerticalSeam(intens, width, height, seam);\n    removeVerticalSeam(grad, width, height, seam);\n\n    width--;\n\n    for (let y = 0; y < height; y++) {\n      const x = seam[y];\n      horizontalGradientRowToArray(\n        grad,\n        intens,\n        width,\n        height,\n        y,\n        Math.max(0, x - 2),\n        Math.max(width - 1, x + 2)\n      );\n    }\n  }\n\n  for (let i = count - 1; i >= 0; i--) {\n    const seam = seams.subarray(i * height, (i + 1) * height);\n\n    for (let j = i - 1; j >= 0; j--) {\n      const other = seams.subarray(j * height, (j + 1) * height);\n\n      for (let k = 0; k < height; k++) {\n        if (other[k] <= seam[k]) {\n          seam[k]++;\n        }\n      }\n    }\n  }\n}\n\nfunction findVerticalSeam(\n  seam: Uint16Array,\n  table: Uint32Array,\n  grads: Uint16Array,\n  width: number,\n  height: number,\n) {\n  for (let x = 0; x < width; x++) {\n    table[x] = grads[x] << 2;\n  }\n\n  for (let y = 1; y < height; y++) {\n    const curr = y * width;\n    const prev = (y - 1) * width;\n\n    for (let x = 0; x < width; x++) {\n      let predecessor = table[prev + x] & (~3);\n\n      if (x > 0) {\n        predecessor = Math.min(predecessor, table[prev + x - 1] & (~3) | 1);\n      }\n\n      if (x < width - 1) {\n        predecessor = Math.min(predecessor, table[prev + x + 1] & (~3) | 2);\n      }\n\n      table[curr + x] = predecessor + (grads[curr + x] << 2);\n    }\n  }\n\n  const last = (height - 1) * width;\n\n  let tail = {\n    value: table[last],\n    x: 0,\n  };\n\n  for (let x = 1; x < width; x++) {\n    const value = table[last + x];\n    if (value < tail.value) {\n      tail = { value, x };\n    }\n  }\n\n  for (let y = height - 1, x = tail.x; y >= 0; y--) {\n    seam[y] = x;\n\n    const value = table[y * width + x];\n\n    if ((value & 1) !== 0) {\n      x--;\n    } else if ((value & 2) !== 0) {\n      x++;\n    }\n  }\n}\n\nfunction removeVerticalSeam(array: TypedArray, width: number, height: number, seam: Uint16Array) {\n  for (let y = 0; y < height; y++) {\n    const source = y * width;\n    const dest = y * (width - 1);\n    const x = seam[y];\n    array.copyWithin(dest, source, source + x);\n    array.copyWithin(dest + x, source + x + 1, source + width);\n  }\n}\n\nfunction transpose<T extends TypedArray>(array: T, width: number, height: number, scratch: T) {\n  transposeToArray(scratch, array, width, height);\n  array.set(scratch.subarray(0, width * height));\n}\n\nfunction transposeToArray<T extends TypedArray>(transposed: T, array: T, width: number, height: number) {\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      transposed[x * height + y] = array[y * width + x];\n    }\n  }\n}\n\nfunction rgbaAverage(x: number, y: number): number {\n  function bytes(u32: number): Array<number> {\n    return [\n      u32 & 0xff,\n      (u32 >> 8) & 0xff,\n      (u32 >> 16) & 0xff,\n      u32 >> 24,\n    ];\n  }\n\n  function u32(bytes: Array<number>): number {\n    return bytes[0] | (bytes[1] << 8) | (bytes[2] << 16) | (bytes[3] << 24);\n  }\n\n  function averageBytes(x: Array<number>, y: Array<number>): Array<number> {\n    return x.map((byte, i) => (byte + y[i]) / 2);\n  }\n\n  return u32(averageBytes(bytes(x), bytes(y)));\n}","const ctx = self as unknown as Worker;\n\nimport {\n  carveImage,\n  highlightSeams,\n  horizontalGradientMap,\n  intensityMap,\n  mapToRgba,\n  verticalGradientMap,\n} from \"./imageProcessing\";\n\nexport type Axis = \"horizontal\" | \"vertical\";\n\nexport type CarveTransformation = {\n  command: \"carve\",\n  width: number,\n  height: number,\n};\n\nexport type HighlightTransformation = {\n  command: \"highlight\",\n  axis: Axis,\n  count: number,\n};\n\nexport type GradientTransformation = {\n  command: \"gradient\",\n  axis: Axis,\n};\n\nexport type IntensityTransformation = { command: \"intensity\" };\n\nexport type Transformation =\n  CarveTransformation |\n  HighlightTransformation |\n  GradientTransformation |\n  IntensityTransformation;\n\nexport type TransferableImageData = {\n  rgba: Uint8Array,\n  width: number,\n  height: number,\n};\n\nexport type Request = {\n  image: TransferableImageData,\n  transformation: Transformation,\n};\n\nexport type Response = TransferableImageData;\n\nfunction sendImage(rgba: Uint8Array, width: number, height: number) {\n  ctx.postMessage({\n    rgba: rgba,\n    width,\n    height\n  }, [rgba.buffer]);\n}\n\nctx.addEventListener(\"message\", event => {\n  const message = event.data as Request;\n\n  const { rgba, width, height } = message.image;\n\n  const startedAt = performance.now();\n  let memo = `${message.transformation.command} ${width}x${height}`;\n\n  switch (message.transformation.command) {\n  case \"carve\": {\n    const { width: carvedWidth, height: carvedHeight } = message.transformation;\n    memo += ` -> ${carvedWidth}x${carvedHeight}`;\n    const carved = carveImage(\n      rgba,\n      width,\n      height,\n      carvedWidth,\n      carvedHeight\n    );\n    sendImage(carved, carvedWidth, carvedHeight);\n    break;\n  }\n\n  case \"highlight\": {\n    const { axis, count } = message.transformation;\n    memo += ` ${count} ${axis}`;\n    const highlighted = highlightSeams(\n      rgba,\n      width,\n      height,\n      axis === \"vertical\",\n      count,\n    );\n    sendImage(highlighted, width, height);\n    break;\n  }\n\n  case \"gradient\": {\n    const { axis } = message.transformation;\n    memo += ` ${axis}`;\n    const intens = intensityMap(rgba, width, height);\n    const grad = (axis === \"vertical\")\n      ? verticalGradientMap(intens, width, height)\n      : horizontalGradientMap(intens, width, height);\n    sendImage(mapToRgba(grad, width * height), width, height);\n    break;\n  }\n\n  case \"intensity\": {\n    const intens = intensityMap(rgba, width, height);\n    sendImage(mapToRgba(intens, width * height), width, height);\n    break;\n  }\n  }\n\n  console.log(`${memo}: ${performance.now() - startedAt}ms`);\n});"],"sourceRoot":""}